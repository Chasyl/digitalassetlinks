// This file contains a subset of the data model used by the Digital Asset Links
// API.  Please see the [Digital Asset
// Links](https://developers.google.com/digital-asset-links/reference/rest/)
// documentation for detailed descriptions of the messages and fields in here.
syntax = "proto3";

package google.digitalassetlinks.v1;

option java_package = "com.google.digitalassetlinks.v1";
option java_outer_classname = "MessagesProto";
option objc_class_prefix = "GDALP";

enum ErrorCode {
  ERROR_CODE_UNSPECIFIED = 0;
  // Unable to parse query.
  ERROR_CODE_INVALID_QUERY = 1;
  // Unable to fetch the asset links data.
  ERROR_CODE_FETCH_ERROR = 2;
  // Invalid HTTPS certificate .
  ERROR_CODE_FAILED_SSL_VALIDATION = 3;
  // HTTP redirects (e.g, 301) are not allowed.
  ERROR_CODE_REDIRECT = 4;
  // Asset links data exceeds maximum size.
  ERROR_CODE_TOO_LARGE = 5;
  // Can't parse HTTP response.
  ERROR_CODE_MALFORMED_HTTP_RESPONSE = 6;
  // HTTP Content-type should be application/json.
  ERROR_CODE_WRONG_CONTENT_TYPE = 7;
  // JSON content is malformed.
  ERROR_CODE_MALFORMED_CONTENT = 8;
  // A secure asset includes an insecure assert (security downgrade).
  ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE = 9;
  // Too many includes (maybe a loop).
  ERROR_CODE_FETCH_BUDGET_EXHAUSTED = 10;
}

message Statement {
  Asset source = 1;
  string relation = 2;
  Asset target = 3;
}

message Asset {
  oneof Asset {
    WebAsset web = 1;
    AndroidAppAsset android_app = 2;
  }
}

message WebAsset {
  string site = 1;
}

message AndroidAppAsset {
  string package_name = 1;

  message CertificateInfo {
    // SHA-256 fingerprint, e.g. `14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC
    // :64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5`.
    string sha256_fingerprint = 1;
  }

  CertificateInfo certificate = 2;
}

message CheckRequest {
  Asset source = 5;
  string relation = 2;
  Asset target = 6;
}

message CheckResponse {
  bool linked = 1;
  string debug_string = 3;
}

message ListRequest {
  Asset source = 1;
  string relation = 2;
}

message ListResponse {
  repeated Statement statements = 1;
  string debug_string = 3;
}
